use crate::util::{jar::RequestJar, responses::DataWrapper, Error};

use super::{ThumbnailFormat, ThumbnailResponse, ThumbnailReturnPolicy, ThumbnailSize};

/// Retrieves thumbnails for assets.
///
/// # Error codes
/// - 1: There are too many requested Ids.
/// - 2: The requested image format is invalid. Please see documentation for valid thumbnail format parameter name and values.
/// - 3: The requested size is invalid. Please see documentation for valid thumbnail size parameter name and format.
/// - 4: The requested Ids are invalid, of an invalid type or missing.
/// - 8: The requested return policy is invalid (must be PlaceHolder, AutoGenerated or ForceAutoGenerated).
/// - 9: User not authorized to use AutoGenerated or ForceAutoGenerated return policies.
/// - 10: Circular thumbnail requests are not allowed
pub async fn get_thumbnails(
    jar: &mut RequestJar,
    asset_ids: Vec<usize>,
    thumbnail_size: Option<ThumbnailSize>,
    thumbnail_return_policy: Option<ThumbnailReturnPolicy>,
    thumbnail_format: Option<ThumbnailFormat>,
) -> Result<ThumbnailResponse, Box<Error>> {
    let url = format!(
        "https://thumbnails.roblox.com/v1/assets?assetIds={}&size={}&format={}&returnPolicy={}",
        asset_ids
            .iter()
            .map(|id| id.to_string())
            .collect::<Vec<String>>()
            .join(","),
        thumbnail_size.unwrap_or(ThumbnailSize::Size30x30).string(),
        thumbnail_format.unwrap_or(ThumbnailFormat::Png).string(),
        thumbnail_return_policy
            .unwrap_or(ThumbnailReturnPolicy::AutoGenerated)
            .string()
    );

    let response = jar.get_json::<DataWrapper<ThumbnailResponse>>(&url).await?;

    Ok(response.data)
}

/// Retrieves a 3d thumbnail for a single asset.
///
/// # Error codes
/// - 4: The requested Ids are invalid, of an invalid type or missing.
pub async fn get_3d_thumbnail(
    jar: &mut RequestJar,
    asset_id: usize,
) -> Result<ThumbnailResponse, Box<Error>> {
    let url = format!(
        "https://thumbnails.roblox.com/v1/asset-thumbnail-3d?assetId={}",
        asset_id
    );

    Ok(jar.get_json::<ThumbnailResponse>(&url).await?)
}

/// Retrieves an animated thumbnail for a single asset.
///
/// # Error codes
/// - 4: The requested Ids are invalid, of an invalid type or missing.
pub async fn get_animated_thumbnail(
    jar: &mut RequestJar,
    asset_id: usize,
) -> Result<ThumbnailResponse, Box<Error>> {
    let url = format!(
        "https://thumbnails.roblox.com/v1/asset-thumbnail-animated?assetId={}",
        asset_id
    );

    Ok(jar.get_json::<ThumbnailResponse>(&url).await?)
}
